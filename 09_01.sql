DROP TABLE DEPT_02 PURGE;
CREATE TABLE DEPT_02 AS SELECT * FROM DEPT;
SELECT * FROM DEPT_02;

--DEPT_02 테이블에서 20부서의 지역명을 40번 부서의 지역명으로 바꾸세요
UPDATE DEPT_02 SET LOC = (SELECT LOC FROM DEPT_02 WHERE DEPTNO = 40) WHERE DEPTNO = '20'; 

--EMP_02 테이블에서 'SALESMAN'의 급여는 2500으로 하고 입사일을 어제 날짜로 바꾸세요
UPDATE EMP_02 SET SAL = 2500, HIREDATE = SYSDATE -2 WHERE JOB = 'SALESMAN';

--EMP_02 테이블의 사원이름에 'T' 가 들어가는 사원의 월급을 700원으로 인상하고 입사일을 모레로 바꾸세요
UPDATE EMP_02 SET SAL = SAL + 7000, HIREDATE = SYSDATE + 2 WHERE ENAME LIKE '%T%';

--EMP_02 테이블에서 'CHICAGO' 에서 근무하는 사원들의 입사일을 본인의 생일로 바꾸세요
UPDATE EMP_02 SET HIREDATE = '98/12/22' WHERE DEPTNO = (SELECT DEPTNO FROM DEPT_02 WHERE LOC = 'CHICAGO');

--EMP_02 테이블의 사원들 중에서 '09'월에 입사한 사원들의 월급을 1000원 인상하세요
--(3가지 방법 사용 => TO_CHAR, SUBSTR, INSTR)
UPDATE EMP_02 SET SAL = SAL + 1000
WHERE INSTR(HIREDATE,'09',4,1)=4;

UPDATE EMP_02 SET SAL = SAL + 1000
WHERE SUBSTR(HIREDATE,4,2)='09';

--UPDATE EMP_02 SET SAL = SAL + 1000
--WHERE TO_CHAR(HIREDATE,'MM')='09';

--근무지가 뉴욕인 사원들을 EMP_02에서 삭제하세요
DELETE FROM EMP_02 WHERE DEPTNO = (SELECT DEPTNO FROM DEPT_02 WHERE LOC = 'NEW YORK');

--COMM이 NULL 인 사원들을 삭제하세요
DELETE FROM EMP_02 WHERE COMM IS NULL;
 
--EMP_02 테이블에서 부서별로 가장 많은 급여를 받는 사원들을 삭제하세요
DELETE FROM EMP_02 WHERE SAL IN(SELECT MAX(SAL) FROM EMP_02 GROUP BY DEPTNO);

--MERGE = > 구조가 같은 두 테이블을 하나의 테이블로 합하는 기능

DROP TABLE EMP_01 PURGE;
CREATE TABLE EMP_01 AS SELECT * FROM EMP;

CREATE TABLE EMP_01 AS SELECT * FROM EMP;
CREATE TABLE EMP_03 AS SELECT * FROM EMP;
DROP TABLE EMP_03 PURGE;
CREATE TABLE EMP_03 AS SELECT * FROM EMP WHERE JOB = 'MANAGER';
SELECT * FROM EMP_01;

UPDATE EMP_03 SET JOB = 'BOSS';
SELECT * FROM EMP_03;

INSERT INTO EMP_03 VALUES(8888,'KOREA', 'TOP', 7568, SYSDATE,1200, 10, 20);
 
INSERT INTO EMP_03 VALUES(9999,'SEOUL', 'TOP', 7568, SYSDATE,1200, 10, 20);

MERGE INTO EMP_01 e
USING EMP_03 m
ON(e.empno=m.empno)
WHEN MATCHED THEN
UPDATE SET
E.ENAME = M.ENAME,
E.JOB = M.JOB,
E.MGR = M.MGR,
E.HIREDATE = M.HIREDATE,
E.SAL = M.SAL,
E.COMM = M.COMM,
E.DEPTNO = M.DEPTNO
WHEN NOT MATCHED THEN
INSERT VALUES(M.EMPNO, M.ENAME, M.JOB, M.MGR, M.HIREDATE, M.SAL,M.COMM, M.DEPTNO);

--트랜잭션
--데이터베이스에서 트렌젝션이란 데이터 처리의 한 단위를 말한다. 특성 - ACID
--원자성, 일관성, 격리성, 영속성
--COMMIT, ROOLLBACK, SAVPOINT

--TRUNCATE와 DELETE 명령의 차이

--무결성 제약조건

